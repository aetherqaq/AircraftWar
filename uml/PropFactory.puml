@startuml
'https://plantuml.com/class-diagram

abstract class BaseProp {
    + BaseProp(int locationX, int locationY, int speedX, int speedY)
    + {abstract} active(): void
}

class PropBlood {
     - cure: int
     + PropBlood(int locationX, int locationY, int speedX, int speedY)
     + active(): void
}

class PropBomb {
     + PropBomb(int locationX, int locationY, int speedX, int speedY)
     + active(): void
}

class PropBullet {
     + PropBullet(int locationX, int locationY, int speedX, int speedY)
     + active(): void
}

class PropBulletPlus {
     + PropBulletPlus(int locationX, int locationY, int speedX, int speedY)
     + active(): void
}

BaseProp <|-- PropBlood
BaseProp <|-- PropBomb
BaseProp <|-- PropBullet
BaseProp <|-- PropBulletPlus

abstract class PropFactory {
    # locationX: int
    # locationY: int
    + PropFactory(int locationX,int locationY)
    + {abstract} createProp(): BaseProp
}

class BloodFactory {
    + BloodFactory(int locationX,int locationY)
    + createProp(): BaseProp
}

class BombFactory {
    + BombFactory(int locationX,int locationY)
    + createProp(): BaseProp
}

class BulletFactory {
    + BulletFactory(int locationX,int locationY)
    + createProp(): BaseProp
}

class BulletPlusFactory {
    + BulletPlusFactory (int locationX,int locationY)
    + createProp(): BaseProp
}

PropFactory <|-- BloodFactory
PropFactory <|-- BombFactory
PropFactory <|-- BulletFactory
PropFactory <|-- BulletPlusFactory

BloodFactory ..> PropBlood
BulletFactory ..> PropBullet
BulletPlusFactory ..> PropBulletPlus
BombFactory ..> PropBomb


@enduml